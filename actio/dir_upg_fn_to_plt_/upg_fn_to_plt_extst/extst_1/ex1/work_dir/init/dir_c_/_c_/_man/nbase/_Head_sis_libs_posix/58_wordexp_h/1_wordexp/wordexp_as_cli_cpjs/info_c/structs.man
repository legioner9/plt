## dirent

    struct dirent {
        ino_t          d_ino;       /* номер inode */
        off_t          d_off;       /* не смещение; смотрите ЗАМЕЧАНИЯ */
        unsigned short d_reclen;    /* длина этой записи */
        unsigned char  d_type;      /* тип файла; поддерживается
                                    не всеми типами файловых систем */
        char           d_name[256]; /* имя файла */
    };

## stat

    struct stat {
        dev_t     st_dev;         /* ID of device containing file */
        ino_t     st_ino;         /* Inode number */
        mode_t    st_mode;        /* File type and mode */
        nlink_t   st_nlink;       /* Number of hard links */
        uid_t     st_uid;         /* User ID of owner */
        gid_t     st_gid;         /* Group ID of owner */
        dev_t     st_rdev;        /* Device ID (if special file) */
        off_t     st_size;        /* Total size, in bytes */
        blksize_t st_blksize;     /* Block size for filesystem I/O */
        blkcnt_t  st_blocks;      /* Number of 512B blocks allocated */

        /* Since Linux 2.6, the kernel supports nanosecond
            precision for the following timestamp fields.
            For the details before Linux 2.6, see NOTES. */

        struct timespec st_atim;  /* Time of last access */
        struct timespec st_mtim;  /* Time of last modification */
        struct timespec st_ctim;  /* Time of last status change */

    #define st_atime st_atim.tv_sec      /* Backward compatibility */
    #define st_mtime st_mtim.tv_sec
    #define st_ctime st_ctim.tv_sec
    };

## timespec

    struct timespec {
        time_t tv_sec;        /* секунды */
        long   tv_nsec;       /* наносекунды */
    };

## glob_t

    typedef struct {
        size_t   gl_pathc;    /* количество совпавших путей  */
        char   **gl_pathv;    /* список совпавших имён путей.  */
        size_t   gl_offs;     /* зарезервированные в gl_pathv слоты.  */
    } glob_t;

## wordexp_t

    typedef struct {
        size_t   we_wordc;   // Количество слов, совпадающих по словам.
        char   **we_wordv;   // Указатель на список развернутых слов.
        size_t   we_offs     // Слоты для резервирования в начале pwordexp->we_wordv.
        }
