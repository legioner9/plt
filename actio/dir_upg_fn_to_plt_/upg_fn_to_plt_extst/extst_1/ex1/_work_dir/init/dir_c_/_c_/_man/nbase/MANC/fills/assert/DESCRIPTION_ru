Каждый вызов макроса assert() является не только проверкой, осуществляемой на этапе
выполнения, но и документацией, описывающей работу программы непосредственно в ее
исходном тексте. Когда программа содержит строку assert (условие), то любой, кто читает
исходный текст, будет знать, что в данной точке программы указанное условие всегда должно
быть истинным. Если же условие не выполняется, то, очевидно, в программе присутствует
ошибка.

int status = do_something();
assert(status == 0);

■Проверяйте наличие пустых указателей, например в списке аргументов функции.
Сообщение об ошибке, генерируемое строкой {assert (pointer != NULL)},
Assertion 'pointer != ((void *)0)' failed.
более информативно, чем сообщение, выдаваемое в ответ на попытку раскрытия пустого
указателя:
Segmentation fault (core dumped)
■Проверяйте значения параметров функции. Например, если в функции предполагается,
что параметр foo имеет только положительные значения, поставьте следующую проверку в
самом начале тела функции:
assert(foo > 0)
Это поможет обнаружить случаи неправильного использования функции, а также даст
понять любому, кто просматривает исходный текст программы, что функция накладывает
ограничение на значение параметра.