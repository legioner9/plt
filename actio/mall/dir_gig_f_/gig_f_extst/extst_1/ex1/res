[0;32m${g_args[@]} = [0m
[0;32m${e_args[@]} = [0m
[0;32m${f_args[@]} = [0m
[0;32m${ARGS[@]} = [0m
[0;32m${dir_fns_} = /home/st/REPOBARE/_repo/plt/actio/mall/dir_gig_f_/gig_f_extst/extst_1/ex1/_deb/res[0m
that lg1_.sal
[0;36m garg2e2_() help: 
MAIN: parser $@ : if ( -_char ) in args -> echo char_=1 , if ( --_char value ) -> echo char_=value
NAME: garg2e2_()
ARGS: 
$@
CNTLS:
required
optional 
CNTL inspect : -h, _man, _tst, _extst_1 [,_extst_2 ...], _go, _deb, -mdeb, _list
CNTL defaut: -echo, -debug, -verbose, --ptr_if {ptr_from_if: if true fn be work, else be ignored}, --ptr_sem {ptr_with_semapore for arg wate_sem, free_sem usnig insidefunction} --errmes {if_error_case}, --outmes {free_message}, ...
CNTL develop: -develop1, ... for special development mode, NOT to product
TAGS: (fs|net|)
IFS: (fifs| exl| ...) - discribe in /home/st/REPOBARE/_repo/plt/.d/.ifs
FLOW: (process | subprocess (no read pause only plt_err return 0) | interpritator)
RETURN: ( result>stdout, return 0 | data | change to ptr |  fs_structure | ...)
ERROR: ( (plt_err | plt_pause | plt_exit) errmes return 1 | ... )
WARN: 
DEBUG:
garg2e2_ _deb, garg2e2_ _mdeb
EXAMP:
garg2e2_ -<>
[0m
[0;32m${g_args[@]} = [0m
[0;32m${e_args[@]} = [0m
[0;32m${f_args[@]} = [0m
[0;32m${ARGS[@]} = -h[0m
[0;32m${dir_fns_} = /home/st/REPOBARE/_repo/plt/actio/mall/dir_gig_f_/gig_f_extst/extst_1/ex1/_deb/res[0m
that lg1_.sal
[0;34m--- exec garg2e2_mdeb (num_menu) ---[0m
