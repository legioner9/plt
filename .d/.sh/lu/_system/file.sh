#!/bin/bash

#. "$HOME/.bashrc"

filename="$PATH_OS/.qa/lib/system/file.sh"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#e_exer "Questions? See far!" "$filename" "$LINENO"

#up_lib_git

# Usage: file [OPTION...] [FILE...]
# Determine type of FILEs.

# -b, --brief
# Не добавляйте имена файлов к строкам вывода (краткий режим).
# -c, --checking-printout
# Вызвать контрольную распечатку проанализированной формы волшебного файла. Обычно это используется вместе с -m для отладки нового волшебного файла перед его установкой.
# -C, --compile
# Напишите выходной файл magic.mgc, содержащий предварительно проанализированную версию файла.
# -f, --files-from файл имени
# Прочитайте имена файлов , которые будут рассмотрены с namefile ( по одной в каждой строке) перед списком аргументов. Должен присутствовать либо namefile, либо хотя бы один аргумент filename; для проверки стандартного ввода используйте `` - '' в качестве аргумента имени файла.
# -F, --separator разделитель
# Используйте указанную строку в качестве разделителя между именем файла и возвращенным результатом файла. По умолчанию ``: ''.
# -h, --no-dereference
# опция запрещает переход по символическим ссылкам (в системах, поддерживающих символические ссылки). Это значение по умолчанию, если переменная среды POSIXLY_CORRECT не определена.
# -i, --mime
# Заставляет команду file выводить строки типа mime, а не более традиционные, удобочитаемые человеком. Таким образом, он может сказать `` текст / простой; charset = us-ascii '', а не `` ASCII text ''. Чтобы эта опция работала, файл изменяет способ обработки файлов, распознаваемых самой командой (например, многих типов текстовых файлов, каталогов и т. Д.), И использует альтернативный `` волшебный '' файл. (См. Раздел `` ФАЙЛЫ '' ниже).
# -k, --keep-going
# Не останавливайся на первом матче, продолжай.
# -L, --dereference
# опция заставляет следовать символическим ссылкам , как опция с похожими именами в ls (1) (в системах, поддерживающих символические ссылки). Это значение по умолчанию, если определена переменная среды POSIXLY_CORRECT .
# -m, --magic- список файлов
# Укажите альтернативный список файлов, содержащих магические числа. Это может быть отдельный файл или список файлов, разделенных двоеточиями. Если рядом найден скомпилированный волшебный файл, он будет использован вместо него. С опцией -i или --mime программа добавляет «.mime» к каждому имени файла.
# -n, --no-buffer
# Принудительно очищать стандартный вывод после проверки каждого файла. Это полезно только при проверке списка файлов. Он предназначен для использования программами, которым требуется вывод файлового типа из канала.
# -N, --no-pad
# Не дополняйте имена файлов так, чтобы они выровнялись на выходе.
# -p, --preserve-date
# В системах, поддерживающих utime (2) или utimes (2), попытайтесь сохранить время доступа к анализируемым файлам, чтобы сделать вид, что файл (2) никогда их не читает.
# -r, --raw
# Не переводите непечатаемые символы в \ ooo. Обычно файл переводит непечатаемые символы в их восьмеричное представление.
# -s, --special-files
# Обычно file пытается только прочитать и определить тип файлов аргументов, о которых stat (2) сообщает, как обычные файлы. Это предотвращает проблемы, поскольку чтение специальных файлов может иметь специфические последствия. Указание опции -s заставляет файл также читать файлы аргументов, которые являются специальными блочными или символьными файлами. Это полезно для определения типов файловой системы данных в необработанных разделах диска, которые являются специальными блочными файлами. Эта опция также заставляет файл игнорировать размер файла, сообщаемый stat (2), поскольку в некоторых системах он сообщает нулевой размер для необработанных разделов диска.
# -v, --version
# Распечатайте версию программы и выйдите.
# -z, --uncompress
# Попробуйте заглянуть внутрь сжатых файлов.

aai_file(){
    echo -e "${CYAN}---aa_ls() $*---${NORMAL}" #started functions
    
    arr=()
    res=()
    arr+=("file -b, --brief - Не добавляйте имена файлов к строкам вывода (краткий режим).")
    res+=("file -b $*")
    arr+=("file -c, --checking-printout - Вызвать контрольную распечатку проанализированной формы волшебного файла. Обычно это используется вместе с -m для отладки нового волшебного файла перед его установкой.")
    res+=("file -c $*")
    arr+=("file -C, --compile - апишите выходной файл magic.mgc, содержащий предварительно проанализированную версию файла.")
    res+=("file -C $*")
    arr+=("file -f, --files-from namefile - Прочитайте имена файлов , которые будут рассмотрены с namefile ( по одной в каждой строке) перед списком аргументов. Должен присутствовать либо namefile, либо хотя бы один аргумент filename; для проверки стандартного ввода используйте `` - '' в качестве аргумента имени файла.")
    res+=("file -f $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    arr+=("file -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;")
    res+=("file -a $*")
    
    
    PS3="eligendi actiones: "
    
    select item in "${arr[@]}";do
        
        dilectus=$item
        break
        
    done
    
    case $dilectus in
        
        "${arr[0]}")
            echo -e "${CYAN}---${res[0]}---${NORMAL}" #started functions
            ${res[0]}
            
        ;;
        "${arr[1]}")
            echo -e "${CYAN}---${res[1]}---${NORMAL}" #started functions
            ${res[1]}
        ;;
        
        "${arr[2]}")
            echo -e "${CYAN}---${res[2]}---${NORMAL}" #started functions
            ${res[2]}
        ;;
        
        "${arr[3]}")
            echo -e "${CYAN}---${res[3]}---${NORMAL}" #started functions
            ${res[3]}
        ;;
        
        "${arr[4]}")
            echo -e "${CYAN}---${res[4]}---${NORMAL}" #started functions
            ${res[4]}
        ;;
        
        "${arr[5]}")
            echo -e "${CYAN}---${res[5]}---${NORMAL}" #started functions
            ${res[5]}
        ;;
        
        "${arr[6]}")
            echo -e "${CYAN}---${res[6]}---${NORMAL}" #started functions
            ${res[6]}
        ;;
        
        "${arr[7]}")
            echo -e "${CYAN}---${res[7]}---${NORMAL}" #started functions
            ${res[7]}
        ;;
        
        "${arr[8]}")
            echo -e "${CYAN}---${res[8]}---${NORMAL}" #started functions
            ${res[8]}
        ;;
        
        "${arr[9]}")
            echo -e "${CYAN}---${res[9]}---${NORMAL}" #started functions
            ${res[9]}
        ;;
        
        "${arr[10]}")
            echo -e "${CYAN}---${res[10]}---${NORMAL}" #started functions
            ${res[10]}
            
        ;;
        "${arr[11]}")
            echo -e "${CYAN}---${res[11]}---${NORMAL}" #started functions
            ${res[11]}
        ;;
        
        "${arr[12]}")
            echo -e "${CYAN}---${res[12]}---${NORMAL}" #started functions
            ${res[12]}
        ;;
        
        "${arr[13]}")
            echo -e "${CYAN}---${res[13]}---${NORMAL}" #started functions
            ${res[13]}
        ;;
        
        "${arr[14]}")
            echo -e "${CYAN}---${res[14]}---${NORMAL}" #started functions
            ${res[14]}
        ;;
        
        "${arr[15]}")
            echo -e "${CYAN}---${res[15]}---${NORMAL}" #started functions
            ${res[15]}
        ;;
        
        "${arr[16]}")
            echo -e "${CYAN}---${res[16]}---${NORMAL}" #started functions
            ${res[16]}
        ;;
        
        "${arr[17]}")
            echo -e "${CYAN}---${res[17]}---${NORMAL}" #started functions
            ${res[17]}
        ;;
        
        "${arr[18]}")
            echo -e "${CYAN}---${res[18]}---${NORMAL}" #started functions
            ${res[18]}
        ;;
        
        "${arr[19]}")
            echo -e "${CYAN}---${res[19]}---${NORMAL}" #started functions
            ${res[19]}
        ;;
        
        "${arr[20]}")
            echo -e "${CYAN}---${res[20]}---${NORMAL}" #started functions
            ${res[20]}
            
        ;;
        "${arr[21]}")
            echo -e "${CYAN}---${res[21]}---${NORMAL}" #started functions
            ${res[21]}
        ;;
        
        "${arr[22]}")
            echo -e "${CYAN}---${res[22]}---${NORMAL}" #started functions
            ${res[22]}
        ;;
        
        "${arr[23]}")
            echo -e "${CYAN}---${res[23]}---${NORMAL}" #started functions
            ${res[23]}
        ;;
        
        "${arr[24]}")
            echo -e "${CYAN}---${res[24]}---${NORMAL}" #started functions
            ${res[24]}
        ;;
        
        "${arr[25]}")
            echo -e "${CYAN}---${res[25]}---${NORMAL}" #started functions
            ${res[25]}
        ;;
        
        "${arr[26]}")
            echo -e "${CYAN}---${res[26]}---${NORMAL}" #started functions
            ${res[26]}
        ;;
        
        "${arr[27]}")
            echo -e "${CYAN}---${res[27]}---${NORMAL}" #started functions
            ${res[27]}
        ;;
        
        "${arr[28]}")
            echo -e "${CYAN}---${res[28]}---${NORMAL}" #started functions
            ${res[28]}
        ;;
        
        "${arr[29]}")
            echo -e "${CYAN}---${res[29]}---${NORMAL}" #started functions
            ${res[29]}
        ;;
        
        "${arr[30]}")
            echo -e "${CYAN}---${res[30]}---${NORMAL}" #started functions
            ${res[30]}
            
        ;;
        "${arr[31]}")
            echo -e "${CYAN}---${res[31]}---${NORMAL}" #started functions
            ${res[31]}
        ;;
        
        "${arr[32]}")
            echo -e "${CYAN}---${res[32]}---${NORMAL}" #started functions
            ${res[32]}
        ;;
        
        "${arr[33]}")
            echo -e "${CYAN}---${res[33]}---${NORMAL}" #started functions
            ${res[33]}
        ;;
        
        "${arr[34]}")
            echo -e "${CYAN}---${res[34]}---${NORMAL}" #started functions
            ${res[34]}
        ;;
        
        "${arr[35]}")
            echo -e "${CYAN}---${res[35]}---${NORMAL}" #started functions
            ${res[35]}
        ;;
        
        "${arr[36]}")
            echo -e "${CYAN}---${res[36]}---${NORMAL}" #started functions
            ${res[36]}
        ;;
        
        "${arr[37]}")
            echo -e "${CYAN}---${res[37]}---${NORMAL}" #started functions
            ${res[37]}
        ;;
        
        "${arr[38]}")
            echo -e "${CYAN}---${res[38]}---${NORMAL}" #started functions
            ${res[38]}
        ;;
        
        "${arr[39]}")
            echo -e "${CYAN}---${res[39]}---${NORMAL}" #started functions
            ${res[39]}
        ;;
        
        
        
        
        
        
        *)
            echo -e "BLUE---error dilectus---${NORMAL}" #sistem info mesage
        ;;
    esac
    
}

unset filename