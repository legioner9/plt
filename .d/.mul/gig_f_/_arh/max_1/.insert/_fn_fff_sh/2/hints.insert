#! strongly return 1 -> exit_err_ \$1
#! strongly return 0 -> exit_reg_

#! treat error for inner functions

# >${FN_OUT_DIR}/com_{name_fn_}.res
# COMMAND &>>${FN_OUT_DIR}/com_{name_fn_}.res
# if [ $? -ne 0 ]; then
#     if [ 1 -eq ${verbose} ]; then
#         cat ${FN_OUT_DIR}/com_{name_fn_}.res
#     fi
#     #? runtime error allowed locally
#     error_allowed_locall_string="STRING"

#     if cat ${FN_OUT_DIR}/COMMAND_{name_fn_}.res | is_rl_siev_and ${error_allowed_locall_string}; then
#         continue
#     else
#         exit_err_{name_fn_} "runtime error:: COMMAND ${addr}"
#     fi
# fi

#! amount args

# is_amount_arg ${NARGS} min_equ max_equ

# if [ $? -ne 0 ]; then
#     plt_pause "is_amount_arg:: be return 1 <- Fail: ${FNLOCK}"
#     return 1
# fi

#! normalize ptr_path -> absolut path
# ptr_path=$1
# ptr_path=$(abs_path $PPWD "ptr_path") #ptr args
#! variables for cr_f_dir_insert_
# fn_name=$(prs_f -n ${arg_path})
# root_path=$(prs_f -d ${arg_path})
#! search in array
# [[ " ${arr[*]} " =~ " $1 " ]] && echo "true" || echo "false"
#! ${array[@]:1} all from 1 member arr